name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: localhost
  IMAGE_NAME: pricesyncpro-frontend
  CONTAINER_NAME: pricesyncpro-frontend

jobs:
  test:
    runs-on: self-hosted
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint
      
    - name: Build application
      run: npm run build

  deploy:
    needs: test
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Build container image
      run: |
        podman build -t ${{ env.IMAGE_NAME }}:latest .
        
    - name: Stop existing container
      run: |
        podman stop ${{ env.CONTAINER_NAME }} || true
        podman rm ${{ env.CONTAINER_NAME }} || true
        
    - name: Run new container
      run: |
        podman run -d \
          --name ${{ env.CONTAINER_NAME }} \
          -p 3000:3000 \
          --restart unless-stopped \
          ${{ env.IMAGE_NAME }}:latest
    - name: Cleanup build artifacts and old images
      run: |
        # Build artifacts'ları sil
        rm -f *.tar *.tar.gz *.zip
        # Eski image'ları temizle
        podman image prune -f
        # Dangling image'ları sil
        podman rmi $(podman images -f "dangling=true" -q) 2>/dev/null || true
        